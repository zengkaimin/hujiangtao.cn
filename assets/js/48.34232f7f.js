(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{102:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("我们在创建Python项目时候经常会碰到的一个问题是\n不同Python版本的项目管理或者是要管理多个环境依赖的时候，\n往往会选择创建虚拟环境或者是多个依赖共存的方案，\n但是以上两个方案都不是很理想。\n一下尝试通过pyenv和pipenv给出一个比较方便的多环境多依赖的解决方案和实践。")]),t._v(" "),t._m(1),t._v(" "),s("p"),t._m(2),s("p"),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),s("p",[t._v("安装成功之后需要在.bashrc或者.bash_profile或.zshrc中添加两行来开启自动补全")]),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),s("p",[t._v("列出系统&pyenv安装的Python版本，pyenv只管理系统和pyenv安装的Python")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),s("p",[t._v("使用pyenv切换Python 版本之后可以通过which python或者是python --version来查看是否生效。")]),t._v(" "),t._m(23),t._v(" "),t._m(24),s("p",[t._v("pyenv会从当前目录开始向上逐级查找.python-versiob文件，直到根目录为止，若找不到，则使用global版本。")]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),s("p",[t._v("它综合了 virtualenv , pip 和 pyenv 三者的功能。能够自动为项目创建和管理虚拟环境。\npipenv使用 Pipfile 和 Pipfile.lock 来管理依赖包，并且在使用pipenv添加或删除包时，\n自动维护 Pipfile 文件，同时生成 Pipfile.lock 来锁定安装包的版本和依赖信息，避免构建错误。\n相比pip需要手动维护requirements.txt 中的安装包和版本，具有很大的进步。")]),t._v(" "),s("p",[t._v("pipenv的思路简单理解便是把pip和virutalenv 2个工具统一起来，使用 pipenv 来代替。\n其核心内容主要有两点")]),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._m(37),t._v(" "),s("p",[t._v("我们希望在每个项目的根目录下保存虚拟环境目录（.venv），\n需要在 .bashrc 或 .bash_profile 中添加如下配置：")]),t._v(" "),t._m(38),s("p",[t._v("退出编辑后执行：")]),t._v(" "),t._m(39),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._m(44),t._v(" "),s("p",[t._v("直接在该项目根目录下创建")]),t._v(" "),t._m(45),s("p",[t._v("创建完虚拟环境之后，在pipenv_demo目录下将会看到一个.venv的目录，这个目录就是pipenv_demo项目的虚拟环境。\n还有一个文件Pipfile，这是一个yoml格式的文件，相当于requirements.txt的作用，用来记录pip的各种安装信息")]),t._v(" "),t._m(46),t._v(" "),t._m(47),t._m(48),t._v(" "),t._m(49),t._m(50),t._v(" "),s("p",[t._v("安装项目中Pipfile和Pipfile.lock中记录的所有依赖")]),t._v(" "),t._m(51),s("p",[t._v("上面的方法都是安装Pipfile中列出来的第三方包的最新版本，\n如果是想安装Pipfile.lock中固定版本的第三方依赖包，需要执行：")]),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),s("p",[t._v("在安装依赖包完成以后，项目根目录会增加两个文件，分别是Pipfile和Pipfile.lock，\n一个文件是Pipfile，这是一个yoml格式的文件，Pipfile.lock是json格式的文件，\n这两个文件相当于requirements.txt的作用，记录了此项目的第三方依赖包，\n这两个文件的区别是 Pipfile中安装的包不包含包的具体版本号，而Pipfile.lock是包含包的具体的版本号的")]),t._v(" "),t._m(55),t._v(" "),s("p",[t._v("启动虚拟环境的shell环境，可以直接在虚拟环境下开发")]),t._v(" "),t._m(56),s("p",[t._v("也可以运行项目")]),t._v(" "),t._m(57),t._m(58),t._v(" "),t._m(59),s("p",[t._v("执行完毕后可发现项目根目录下的.venv目录已经删除，但是Pipfile被留下了")]),t._v(" "),t._m(60),t._v(" "),s("p",[t._v("在安装时，指定--dev参数，则只安装[dev-packages]下的包,\n若安装时不定指定--dev参数，只会安装[packages] 包下面的模块。")]),t._v(" "),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),s("p",[t._v("建议团队内开发人员，在自己电脑上都安装pyenv和pipenv。\nPipfile和Pipfile.lock加入版本跟踪，.venv不要加入版本管理。\n为自己的每一个项目建立独立的虚拟环境。")]),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._m(67),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/2b0b652eaa50",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mac OS下使用pyenv管理Python版本 - 简书"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/liuchunming033/article/details/79582617",target:"_blank",rel:"noopener noreferrer"}},[t._v("利用pipenv和pyenv管理多个相互独立的Python虚拟开发环境 - CSDN"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000012837890",target:"_blank",rel:"noopener noreferrer"}},[t._v("pipenv 更优雅的管理你的python开发环境 - segmentfault"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.zengyuetian.com/?p=2655",target:"_blank",rel:"noopener noreferrer"}},[t._v("PYTHON实践32-PYCHARM里使用PIPENV创建的环境"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/00af447f0005",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python新利器之pipenv - 简书"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jetbrains.com/help/pycharm/2018.2/pipenv.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuring Pipenv Environment - PyCharm 2018.2 Help"),s("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"pyenv-pipenv-管理python项目环境依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pyenv-pipenv-管理python项目环境依赖","aria-hidden":"true"}},[this._v("#")]),this._v(" pyenv & pipenv 管理Python项目环境依赖")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[this._v("#")]),this._v(" 目录")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#目录"}},[t._v("目录")])]),s("li",[s("a",{attrs:{href:"#pyenv"}},[t._v("pyenv")]),s("ul",[s("li",[s("a",{attrs:{href:"#简介"}},[t._v("简介")])]),s("li",[s("a",{attrs:{href:"#安装"}},[t._v("安装")])]),s("li",[s("a",{attrs:{href:"#设置"}},[t._v("设置")])]),s("li",[s("a",{attrs:{href:"#使用"}},[t._v("使用")])])])]),s("li",[s("a",{attrs:{href:"#pipenv"}},[t._v("pipenv")]),s("ul",[s("li",[s("a",{attrs:{href:"#简介"}},[t._v("简介")])]),s("li",[s("a",{attrs:{href:"#安装"}},[t._v("安装")])]),s("li",[s("a",{attrs:{href:"#设置"}},[t._v("设置")])]),s("li",[s("a",{attrs:{href:"#使用"}},[t._v("使用")])])])]),s("li",[s("a",{attrs:{href:"#pycharm设置使用pipenv"}},[t._v("PyCharm设置使用pipenv")]),s("ul",[s("li",[s("a",{attrs:{href:"#设置方式"}},[t._v("设置方式")])])])]),s("li",[s("a",{attrs:{href:"#reference"}},[t._v("Reference")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pyenv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pyenv","aria-hidden":"true"}},[this._v("#")]),this._v(" pyenv")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("pyenv是Python版本管理工具，利用它我们可以在同一台电脑上安装多个版本的Python\n完美的解决了python版本的管理问题")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("使用 "),e("code",[this._v("brew")]),this._v(" 安装，主要是方便管理，非Mac下再使用 "),e("code",[this._v("git")]),this._v(" 手动安装或其他方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ brew "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" pyenv\n$ brew upgrade pyenv\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# setting for pyenv")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("export")]),t._v(" PATH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HOME")]),t._v("/.pyenv/bin:"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PATH")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("pyenv init -"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("这一步在安装pyenv完成后建议立即进行设置，不然在后面的Python版本切换和控制中会不生效，\n尤其是 "),e("code",[this._v("pyenv init -")]),this._v(" 的设置，"),e("code",[this._v("pyenv shell <version>")]),this._v(" 是依赖于它的。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("help文档")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pyenv\n$ pyenv "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("help")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("查看管理的Python版本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pyenv versions\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("列出所有pipenv可安装的版本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pyenv "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" --list\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("安装指定版本")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ pyenv "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ pyenv "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" 3.6.5\n$ pyenv "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" 2.7.14\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Python版本管理")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ pyenv global "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局设置python版本为指定版本，设置全局的 Python 版本，通过将版本号写入 ~/.pyenv/version 文件的方式。")]),t._v("\n$ pyenv local "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置当前路径下python版本为指定版本，设置 Python 本地版本，通过将版本号写入当前目录下的 .python-version 文件的方式。通过这种方式设置的 Python 版本优先级较 global 高。")]),t._v("\n$ pyenv shell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置当前shell窗口使用的python版本为指定版本，设置面向 shell 的 Python 版本，通过设置当前 shell 的 PYENV_VERSION 环境变量的方式。这个版本的优先级比 local 和 global 都要高。–unset 参数可以用于取消当前 shell 设定的版本。")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Python版本的优先级")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("shell "),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v(" local "),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v(" global\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("创建垫片路径")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pyenv rehash\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("为所有已安装的可执行文件创建 shims，如："),e("code",[this._v("~/.pyenv/versions/*/bin/*")]),this._v("，\n因此，每当你增删了 Python 版本或带有可执行文件的包（如 pip）以后，都应该执行一次本命令")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Python卸载")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ pyenv isntall "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装版本号为<version>的Python")]),t._v("\n$ pyenv uninstall "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#卸载版本号为<version>的Python")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pipenv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipenv","aria-hidden":"true"}},[this._v("#")]),this._v(" pipenv")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("pipenv是Python官方推荐的包管理工具。")]),this._v(" "),e("blockquote",[e("p",[this._v("Pipenv — the officially recommended Python packaging tool from Python.org, free (as in freedom).")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("1. pipenv 使用 Pipfile 来代替 requirement.txt 文件记录python包。\n2. 增加了Pipfile.lock 文件来锁定python软件的包名及版本，以及其依赖关系的列表。\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"安装-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("尝试过使用pip install --user pipenv 和 brew install pipenv，安装的版本是不一样的")]),this._v("\n这里建议使用 "),e("code",[this._v("brew")]),this._v(" 安装，主要是方便管理，非Mac下再使用 "),e("code",[this._v("pip")]),this._v(" 安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ brew "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" pipenv\n$ brew upgrade pipenv\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"设置-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# setting for pipenv")]),this._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("export")]),this._v(" PIPENV_VENV_IN_PROJECT"),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),this._v("1\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("source")]),this._v(" ~/.bashrc\n或者\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("source")]),this._v(" ~/.bash_profile\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"使用-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("pipenv 的使用之前要确保pyenv在当前目录和当前shell环境设置了正确的Python版本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("新项目创建虚拟环境")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" pipenv_demo\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" pipenv_demo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化一个python3虚拟环境")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果想初始化pyhton2的虚拟环境，则使用pipenv --two")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者指定版本pipenv --python 3.6.5 或者 pipenv --python 2.7.14")]),t._v("\n$ pipenv --three\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("已经存在的项目创建虚拟环境")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("cd")]),this._v(" pipenv_demo\n$ pipenv --three\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("安装卸载包")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pipenv "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" flask\n$ pipenv "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" pytest --dev   "),e("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# 用于区分需要部署到线上的开发包、只需要在测试环境中执行的包")]),this._v("\n$ pipenv uninstall flask\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("通过requirements安装包")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ pipenv "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -r requirements.txt\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成requirements文件")]),t._v("\n$ pipenv lock -r "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" requirements.txt\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("安装项目中所有的依赖包")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装[packages]下的包")]),t._v("\n$ pipenv "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装[dev-packages]下的包")]),t._v("\n$ pipenv "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -d\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pipenv "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v(" --ignore-pipfile\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("检查已安装的包")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pipenv graph\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("运行虚拟环境")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pipenv shell\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("source")]),this._v(" /path_to_.venv/bin/activate\n$ pipenv shell --anyway\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ pipenv run python xxx.py\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("删除虚拟环境")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("cd")]),this._v(" pipenv_demo\n$ pipenv --rm\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("注意事项")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("可以更新 pypi源来提高依赖库安装的速度，修改 "),e("code",[this._v("Pipfile")]),this._v(" 文件中的 "),e("code",[this._v("[[source]]")]),this._v(" 的 "),e("code",[this._v("url")]),this._v("，\n设置为国内镜像源")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#url = "https://pypi.org/simple"')]),t._v("\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://pypi.tuna.tsinghua.edu.cn/simple"')]),t._v("\nverify_ssl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pypi"')]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("开发建议")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"pycharm设置使用pipenv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pycharm设置使用pipenv","aria-hidden":"true"}},[this._v("#")]),this._v(" PyCharm设置使用pipenv")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"设置方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("在 Preferences/Project: demo/Project Interpreter 设置下选择\nadd... > Existing environment > Interpreter 中选择 /path_to_.venv/bin/python\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reference","aria-hidden":"true"}},[this._v("#")]),this._v(" Reference")])}],!1,null,null,null);e.default=n.exports}}]);