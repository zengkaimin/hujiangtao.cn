(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{89:function(t,a,e){"use strict";e.r(a);var n=e(0),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"nginx之location配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx之location配置","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx之location配置")]),t._v(" "),e("h2",{attrs:{id:"目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#目录"}},[t._v("目录")])]),e("li",[e("a",{attrs:{href:"#语法规则："}},[t._v("语法规则：")])]),e("li",[e("a",{attrs:{href:"#未试验过的其他信息："}},[t._v("未试验过的其他信息：")])]),e("li",[e("a",{attrs:{href:"#rewrite语法"}},[t._v("ReWrite语法")])]),e("li",[e("a",{attrs:{href:"#redirect语法"}},[t._v("Redirect语法")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"语法规则："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法规则：","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法规则：")]),t._v(" "),e("ul",[e("li",[t._v("语法规则")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location [=|~|~*|^~] /uri/ { … }\n= 开头表示精确匹配\n^~ 开头表示uri以某个常规字符串开头，理解为匹配 url路径即可。nginx不对url做编码，因此请求为/static/20%/aa，可以被规则^~ /static/ /aa匹配到（注意是空格）。\n~ 开头表示区分大小写的正则匹配\n~* 开头表示不区分大小写的正则匹配\n!~和!~*分别为区分大小写不匹配及不区分大小写不匹配 的正则\n/ 通用匹配，任何请求都会匹配到。\n")])])]),e("ul",[e("li",[t._v("多个location配置的情况下匹配顺序为（参考资料而来，还未实际验证，试试就知道了，不必拘泥，仅供参考）：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("首先匹配 =，\n其次匹配^~,\n其次是按文件中顺序的正则匹配，\n最后是交给 / 通用匹配。\n当有匹配成功时候，停止匹配，按当前匹配规则处理请求。\n")])])]),e("ul",[e("li",[t._v("例子，有如下匹配规则：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location = / {\n    #规则A\n}\nlocation = /login {\n    #规则B\n}\nlocation ^~ /static/ {\n    #规则C\n}\nlocation ~ \\.(gif|jpg|png|js|css)$ {\n    #规则D\n}\nlocation ~* \\.png$ {\n    #规则E\n}\nlocation !~ \\.xhtml$ {\n    #规则F\n}\nlocation !~* \\.xhtml$ {\n    #规则G\n}\nlocation / {\n    #规则H\n}\n")])])]),e("p",[t._v("那么产生的效果如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("访问根目录/， 比如http://localhost/ 将匹配规则A\n访问 http://localhost/login 将匹配规则B，http://localhost/register 则匹配规则H\n访问 http://localhost/static/a.html 将匹配规则C\n访问 http://localhost/a.gif, http://localhost/b.jpg 将匹配规则D和规则E，但是规则D顺序优先，规则E不起作用，而 http://localhost/static/c.png 则优先匹配到 规则C\n访问 http://localhost/a.PNG 则匹配规则E， 而不会匹配规则D，因为规则E不区分大小写。\n访问 http://localhost/a.xhtml 不会匹配规则F和规则G，http://localhost/a.XHTML不会匹配规则G，因为不区分大小写。规则F，规则G属于排除法，符合匹配规则但是不会匹配到，所以想想看实际应用中哪里会用到。\n访问 http://localhost/category/id/1111 则最终匹配到规则H，因为以上规则都不匹配，这个时候应该是nginx转发请求给后端应用服务器，比如FastCGI（php），tomcat（jsp），nginx作为方向代理服务器存在。\n")])])]),e("p",[t._v("所以实际使用中，个人觉得至少有三个匹配规则定义，如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。\n#这里是直接转发给后端应用服务器了，也可以是一个静态首页\n# 第一个必选规则\nlocation = / {\n    proxy_pass http://tomcat:8080/index\n}\n\n# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项\n# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用\nlocation ^~ /static/ {\n    root /webroot/static/;\n}\nlocation ~* \\.(gif|jpg|jpeg|png|css|js|ico)$ {\n    root /webroot/res/;\n}\n \n#第三个规则就是通用规则，用来转发动态请求到后端应用服务器\n#非静态文件请求就默认是动态请求，自己根据实际把握\n#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了\nlocation / {\n    proxy_pass http://tomcat:8080/\n}\n")])])]),e("h2",{attrs:{id:"未试验过的其他信息："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#未试验过的其他信息：","aria-hidden":"true"}},[t._v("#")]),t._v(" 未试验过的其他信息：")]),t._v(" "),e("h2",{attrs:{id:"rewrite语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rewrite语法","aria-hidden":"true"}},[t._v("#")]),t._v(" ReWrite语法")]),t._v(" "),e("ul",[e("li",[t._v("基本语法")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("last – 基本上都用这个Flag。\nbreak – 中止Rewirte，不在继续匹配\nredirect – 返回临时重定向的HTTP状态302\npermanent – 返回永久重定向的HTTP状态301\n注：last和break最大的不同在于\n- break是终止当前location的rewrite检测,而且不再进行location匹配 - last是终止当前location的rewrite检测,但会继续重试\n")])])]),e("ul",[e("li",[t._v("location匹配并处理区块中的rewrite规则")])]),t._v(" "),e("p",[t._v("1、下面是可以用来判断的表达式：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-f和!-f用来判断是否存在文件\n-d和!-d用来判断是否存在目录\n-e和!-e用来判断是否存在文件或目录\n-x和!-x用来判断文件是否可执行\n")])])]),e("p",[t._v("2、下面是可以用作判断的全局变量")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$args #这个变量等于请求行中的参数。\n$content_length #请求头中的Content-length字段。\n$content_type #请求头中的Content-Type字段。\n$document_root #当前请求在root指令中指定的值。\n$host #请求主机头字段，否则为服务器名称。\n$http_user_agent #客户端agent信息\n$http_cookie #客户端cookie信息\n$limit_rate #这个变量可以限制连接速率。\n$request_body_file #客户端请求主体信息的临时文件名。\n$request_method #客户端请求的动作，通常为GET或POST。\n$remote_addr #客户端的IP地址。\n$remote_port #客户端的端口。\n$remote_user #已经经过Auth Basic Module验证的用户名。\n$request_filename #当前请求的文件路径，由root或alias指令与URI请求生成。\n$query_string #与$args相同。\n$scheme #HTTP方法（如http，https）。\n$server_protocol #请求使用的协议，通常是HTTP/1.0或HTTP/1.1。\n$server_addr #服务器地址，在完成一次系统调用后可以确定这个值。\n$server_name #服务器名称。\n$server_port #请求到达服务器的端口号。\n$request_uri #包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。\n$uri #不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。\n$document_uri #与$uri相同。\n例：http://localhost:88/test1/test2/test.php\n$host：localhost\n$server_port：88\n$request_uri：http://localhost:88/test1/test2/test.php\n$document_uri：/test1/test2/test.php\n$document_root：D:\\nginx/html\n$request_filename：D:\\nginx/html/test1/test2/test.php\n")])])]),e("h2",{attrs:{id:"redirect语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redirect语法","aria-hidden":"true"}},[t._v("#")]),t._v(" Redirect语法")]),t._v(" "),e("ul",[e("li",[t._v("多目录转成参数")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("abc.domian.com/sort/2 => abc.domian.com/index.php?act=sort&name=abc&id=2\n\nif ($host ~* (.*)\\.domain\\.com) {\n    set $sub_name $1; \n    rewrite ^/sort\\/(\\d+)\\/?$ /index.php?act=sort&cid=$sub_name&id=$1 last;\n}\n")])])]),e("ul",[e("li",[t._v("目录对换")])]),t._v(" "),e("p",[t._v("/123456/xxxx -> /xxxx?id=123456")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("rewrite ^/(\\d+)/(.+)/ /$2?id=$1 last;\n")])])]),e("ul",[e("li",[t._v("例如下面设定nginx在用户使用ie的使用重定向到/nginx-ie目录下：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if ($http_user_agent ~ MSIE) {\n    rewrite ^(.*)$ /nginx-ie/$1 break;\n}\n")])])]),e("ul",[e("li",[t._v("目录自动加“/”")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if (-d $request_filename){\n    rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent;\n}\n")])])]),e("ul",[e("li",[t._v("禁止htaccess")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ~/\\.ht {\n    deny all;\n}\n")])])]),e("ul",[e("li",[t._v("禁止多个目录")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ~ ^/(cron|templates)/ {\n    deny all;\n    break;\n}\n")])])]),e("ul",[e("li",[t._v("禁止以/data开头的文件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("可以禁止/data/下多级目录下.log.txt等请求;\n\nlocation ~ ^/data {\n    deny all;\n}\n")])])]),e("ul",[e("li",[t._v("禁止单个目录")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("不能禁止.log.txt能请求\n\nlocation /searchword/cron/ {\n    deny all;\n}\n")])])]),e("ul",[e("li",[t._v("禁止单个文件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ~ /data/sql/data.sql {\n    deny all;\n}\n")])])]),e("ul",[e("li",[t._v("给favicon.ico和robots.txt设置过期时间;")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ~(favicon.ico) {\n    log_not_found off;\n    expires 99d;\n    break;\n}\n\nlocation ~(robots.txt) {\n    log_not_found off;\n    expires 7d;\n    break;\n}\n\n这里为favicon.ico为99 天,robots.txt为7天并不记录404错误日志\n")])])]),e("ul",[e("li",[t._v("设定某个文件的过期时间;这里为600秒，并不记录访问日志")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ^~ /html/scripts/loadhead_1.js {\n    access_log off;\n    root /opt/lampp/htdocs/web;\n    expires 600;\n    break;\n}\n")])])]),e("ul",[e("li",[t._v("文件反盗链并设置过期时间")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location ~* ^.+\\.(jpg|jpeg|gif|png|swf|rar|zip|css|js)$ {\n    valid_referers none blocked *.c1gstudio.com *.c1gstudio.net localhost 208.97.167.194;\n    if ($invalid_referer) {\n        rewrite ^/ http://leech.c1gstudio.com/leech.gif;\n        return 412;\n        break;\n    }\n    access_log off;\n    root /opt/lampp/htdocs/web;\n    expires 3d;\n    break;\n}\n\n这里的return 412 为自定义的http状态码，默认为403，方便找出正确的盗链的请求\n“rewrite ^/ http://leech.c1gstudio.com/leech.gif;”显示一张防盗链图片\n“access_log off;”不记录访问日志，减轻压力\n“expires 3d”所有文件3天的浏览器缓存\n\n")])])]),e("ul",[e("li",[t._v("只充许固定ip访问网站，并加上密码")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('root /opt/htdocs/www;\nallow 208.97.167.194;\nallow 222.33.1.2;\nallow 231.152.49.4;\ndeny all;\nauth_basic "C1G_ADMIN";\nauth_basic_user_file htpasswd;\n')])])]),e("ul",[e("li",[t._v("将多级目录下的文件转成一个文件，增强seo效果")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/job-123-456-789.html 指向/job/123/456/789.html\n\nrewrite ^/job-([0-9]+)-([0-9]+)-([0-9]+)\\.html$ /job/$1/$2/jobshow_$3.html last;\n")])])]),e("ul",[e("li",[t._v("将根目录下某个文件夹指向2级目录")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("如/shanghaijob/ 指向 /area/shanghai/\n如果你将last改成permanent，那么浏览器地址栏显是 /location/shanghai/\n\nrewrite ^/([0-9a-z]+)job/(.*)$ /area/$1/$2 last;\n")])])]),e("ul",[e("li",[t._v("上面例子有个问题是访问/shanghai 时将不会匹配")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("rewrite ^/([0-9a-z]+)job$ /area/$1/ last;\nrewrite ^/([0-9a-z]+)job/(.*)$ /area/$1/$2 last;\n")])])]),e("ul",[e("li",[t._v("这样/shanghai 也可以访问了，但页面中的相对链接无法使用，")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("如./list_1.html真实地址是/area /shanghia/list_1.html会变成/list_1.html,导至无法访问。\n那我加上自动跳转也是不行咯\n(-d $request_filename)它有个条件是必需为真实目录，而我的rewrite不是的，所以没有效果\n\nif (-d $request_filename) {\n    rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent;\n}\n")])])]),e("ul",[e("li",[t._v("知道原因后就好办了，让我手动跳转吧")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("rewrite ^/([0-9a-z]+)job$ /$1job/ permanent;\nrewrite ^/([0-9a-z]+)job/(.*)$ /area/$1/$2 last;\n")])])]),e("ul",[e("li",[t._v("文件和目录不存在的时候重定向：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if (!-e $request_filename) {\n    proxy_pass http://127.0.0.1;\n}\n")])])]),e("ul",[e("li",[t._v("域名跳转")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n    listen 80;\n    server_name jump.c1gstudio.com;\n    index index.html index.htm index.php;\n    root /opt/lampp/htdocs/www;\n    rewrite ^/ http://www.c1gstudio.com/;\n    access_log off;\n}\n")])])]),e("ul",[e("li",[t._v("多域名转向")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('server_name www.c1gstudio.com www.c1gstudio.net;\nindex index.html index.htm index.php;\nroot /opt/lampp/htdocs;\nif ($host ~ "c1gstudio\\.net") {\n    rewrite ^(.*) http://www.c1gstudio.com$1 permanent;\n}\n')])])]),e("ul",[e("li",[t._v("三级域名跳转")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('if ($http_host ~* "^(.*)\\.i\\.c1gstudio\\.com$") {\n    rewrite ^(.*) http://top.yingjiesheng.com$1;\n    break;\n}\n')])])]),e("ul",[e("li",[t._v("域名镜向")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n    listen 80;\n    server_name mirror.c1gstudio.com;\n    index index.html index.htm index.php;\n    root /opt/lampp/htdocs/www;\n    rewrite ^/(.*) http://www.c1gstudio.com/$1 last;\n    access_log off;\n}\n")])])])])}],!1,null,null,null);a.default=s.exports}}]);